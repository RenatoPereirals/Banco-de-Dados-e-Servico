// <auto-generated />
using System;
using Bsd.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bsd.Infrastructure.Migrations
{
    [DbContext(typeof(BsdDbContext))]
    [Migration("20240618192814_Test")]
    partial class Test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Bsd.Domain.Entities.BsdEntity", b =>
                {
                    b.Property<int>("BsdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateService")
                        .HasColumnType("TEXT");

                    b.Property<int>("DayType")
                        .HasColumnType("INTEGER");

                    b.HasKey("BsdId");

                    b.ToTable("BsdEntities");
                });

            modelBuilder.Entity("Bsd.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateService")
                        .HasColumnType("TEXT");

                    b.Property<int>("Digit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServiceType")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Bsd.Domain.Entities.EmployeeRubric", b =>
                {
                    b.Property<int>("EmployeeRubricId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BsdEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RubricId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeeRubricId");

                    b.HasIndex("BsdEntityId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RubricId");

                    b.ToTable("EmployeeRubrics");
                });

            modelBuilder.Entity("Bsd.Domain.Entities.Rubric", b =>
                {
                    b.Property<int>("RubricId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HoursPerDay")
                        .HasColumnType("TEXT");

                    b.Property<int>("ServiceType")
                        .HasColumnType("INTEGER");

                    b.HasKey("RubricId");

                    b.ToTable("Rubrics");
                });

            modelBuilder.Entity("BsdEntityEmployee", b =>
                {
                    b.Property<int>("BsdEntitiesBsdId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeesEmployeeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BsdEntitiesBsdId", "EmployeesEmployeeId");

                    b.HasIndex("EmployeesEmployeeId");

                    b.ToTable("BsdEntityEmployee");
                });

            modelBuilder.Entity("Bsd.Domain.Entities.EmployeeRubric", b =>
                {
                    b.HasOne("Bsd.Domain.Entities.BsdEntity", "BsdEntity")
                        .WithMany("EmployeeRubrics")
                        .HasForeignKey("BsdEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bsd.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bsd.Domain.Entities.Rubric", "Rubric")
                        .WithMany()
                        .HasForeignKey("RubricId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BsdEntity");

                    b.Navigation("Employee");

                    b.Navigation("Rubric");
                });

            modelBuilder.Entity("BsdEntityEmployee", b =>
                {
                    b.HasOne("Bsd.Domain.Entities.BsdEntity", null)
                        .WithMany()
                        .HasForeignKey("BsdEntitiesBsdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bsd.Domain.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bsd.Domain.Entities.BsdEntity", b =>
                {
                    b.Navigation("EmployeeRubrics");
                });
#pragma warning restore 612, 618
        }
    }
}
